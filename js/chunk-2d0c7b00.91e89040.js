(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c7b00"],{"524a":function(n,t,i){"use strict";i.r(t);var e=function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},a=[function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticClass:"GitCommon"},[i("pre",{staticClass:"language-git"},[i("code",[n._v("// 从远程仓库克隆初始项目\ngit clone 项目地址")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 拉取项目别人的分支代码\ngit clone -b 别人分支名 项目地址")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 查看本地分支\ngit branch \n\n// 查看远程分支\ngit branch -r\n\n// 查看远程分支和本地分支\ngit branch -a \n\n// 删除本地分支\ngit branch -d 分支名\n\n//删除远程分支\ngit push origin --delete 分支名")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 创建自己开发的分支\ngit branch 分支名\n\n// 切换到自己的分支\ngit checkout 分支名\n\n// 包括上面的操作，查看和切换分支，拉去远程分支并创建本地分支\ngit checkout -b 分支名")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 会在本地新建分支，并自动切换到本地分支，会建立映射\ngit checkout -b 本地分支 origin/远程分支\n// 会在本地新建分支，但是不会切换到本地分支，不会建立映射\ngit fetch origin 远程分支：本地分支")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v('// 查看状态\ngit status \n\n// 添加当前目录的所有文件的修改到暂存区\ngit add .\n\n// 提交暂存区的内容到本地仓库\ngit commit -m "信息" \n\n// 推送内容到远程仓库，若没有该分支 则自动创建并推送\ngit push origin 分支名\n\n// 强推代码（不建议）\ngit push -f')])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 拉取master主分支最新代码\ngit pull  \n\n// 强行拉分支（不建议）\ngit fetch --all\ngit reset --hard origin/develop\ngit pull")])]),i("pre",{staticClass:"language-git"},[i("code",[n._v("// 合并分支\ngit merge 分支名")])])])}],g={},c=g,s=i("cba8"),l=Object(s["a"])(c,e,a,!1,null,null,null);t["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0c7b00.91e89040.js.map