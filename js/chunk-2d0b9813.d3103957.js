(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b9813"],{"32db":function(n,t,e){"use strict";e.r(t);var i=function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},s=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"GitPractice"},[e("pre",{staticClass:"language-git"},[e("code",[n._v('//从远程仓库克隆初始项目\ngit clone 项目地址\n\n// 查看和切换分支，拉取远程分支并创建本地分支\ngit checkout -b 分支名\n\n//查看文件修改状态\ngit status\n\n// 查看状态\ngit status \n\n// 添加当前目录的所有文件的修改到暂存区\ngit add .\n\n// 提交暂存区的内容到本地仓库\ngit commit -m "信息" \n\n// 推送内容到远程仓库，若没有该分支 则自动创建并推送\ngit push origin 分支名\n\n// 切换master主分支\ngit checkout master\n\n// 拉取master主分支最新代码（万一别人push了）\ngit pull\n\n// 合并分支\ngit merge 分支名 \n\n// 如果有冲突，在vscode解决冲突后\n// 重新 add commit push三个指令\n\n// 如果没有冲突\ngit push\n\n// 切换到自己开发的分支\ngit checkout 分支名\n\n// 如果master主分支上有他人的修改 则合并到自己开发的分支 没有则继续开发\ngit merge master')])])])}],c={},a=c,u=e("cba8"),r=Object(u["a"])(a,i,s,!1,null,null,null);t["default"]=r.exports}}]);
//# sourceMappingURL=chunk-2d0b9813.d3103957.js.map